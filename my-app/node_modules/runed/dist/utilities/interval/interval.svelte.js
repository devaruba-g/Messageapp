import { useInterval } from "../use-interval/index.js";
/**
 * Reactive counter increases on every interval
 *
 * @see https://runed.dev/docs/utilities/interval
 */
export class Interval {
    #counter = $state(0);
    #callback;
    #intervalControl;
    constructor(interval = 1000, options = {}) {
        const { immediate = true, callback } = options;
        this.#callback = callback;
        this.#intervalControl = useInterval(() => {
            this.#counter++;
            this.#callback?.(this.#counter);
        }, interval, { immediate });
    }
    /**
     * Get the current counter value
     */
    get counter() {
        return this.#counter;
    }
    /**
     * Whether the interval is currently active
     */
    get isActive() {
        return this.#intervalControl.isActive;
    }
    /**
     * Pause the interval
     */
    pause() {
        this.#intervalControl.pause();
    }
    /**
     * Resume the interval
     */
    resume() {
        this.#intervalControl.resume();
    }
    /**
     * Reset the counter to 0
     */
    reset() {
        this.#counter = 0;
    }
}
